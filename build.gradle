plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

//apply plugin: 'org.springframework.boot'

group = 'com.honchar'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	//spring libs
	springVersion = '5.3.20'
	//bootVersion = '2.7.0'           //New with jakarta
	bootVersion = '2.1.18.RELEASE'    //Old with javax
	springDataVersion = '2.7.0'
	springAmqpVersion = '2.4.4'
	springSecurityVersion = '5.7.0'
	springBatchVersion = '4.3.5'
	springIntegrationVersion = '5.5.10'

	//logging libs
	slf4jVersion = '1.7.36'
	logbackVersion = '1.2.11'

	groovyVersion = '3.0.10'
	guavaVersion = '23.0'

	aspectjVersion = '1.9.8'
	dbcp2Version = '2.9.0'
	mysqlVersion = '8.0.29'
	postgresVersion = '42.4.0'
	jodaVersion = '2.10.13'
	utVersion = '7.0.0.CR1'
	javaxValidationVersion = '2.0.1.Final'
	javaElVersion = '3.0.1-b06'
	glasshfishELVersion = '2.2.1-b05'
	jmsVersion = '2.0.1'
	artemisVersion = '2.22.0'
	hornetqVersion = '2.4.9.Final'
	castorVersion = '1.4.1'
	jacksonVersion = '2.13.2.2'
	httpclientVersion = '4.5.13'
	poiVersion = '5.2.2'
	tilesVersion = '3.0.8'
	bootstrapVersion = '5.1.3'
	thymeSecurityVersion = '3.0.4.RELEASE'
	jQueryVersion = '3.6.0'
	twsVersion = '10.1.0-M15'
	annotationApiVersion = '1.3.2'

	//persistency libraries
	hibernateVersion = '5.6.9.Final'
	hibernateJpaVersion = '1.0.2.Final'
	hibernateValidatorVersion = '7.0.4.Final'
	atomikosVersion = '5.0.8'
	lang3Version = '3.12.0'

	//testing libs
	mockitoVersion = '2.0.2-beta'
	jupiterVersion = '5.8.0'
	hamcrestVersion = '2.2'
	dbunitVersion = '2.7.3'

	spring = [
			core              : "org.springframework:spring-core:${springVersion}",
			beans             : "org.springframework:spring-beans:${springVersion}",
			context           : "org.springframework:spring-context:${springVersion}",
			webmvc            : "org.springframework:spring-webmvc:${springVersion}",
			aop               : "org.springframework:spring-aop:${springVersion}",
			aspects           : "org.springframework:spring-aspects:${springVersion}",
			tx                : "org.springframework:spring-tx:${springVersion}",
			jdbc              : "org.springframework:spring-jdbc:${springVersion}",
			contextSupport    : "org.springframework:spring-context-support:${springVersion}",
			orm               : "org.springframework:spring-orm:${springVersion}",
			dataJpa           : "org.springframework.data:spring-data-jpa:${springDataVersion}",
			test              : "org.springframework:spring-test:${springVersion}",
			jms               : "org.springframework:spring-jms:${springVersion}",
			oxm               : "org.springframework:spring-oxm:${springVersion}",
			securityWeb       : "org.springframework.security:spring-security-web:${springSecurityVersion}",
			securityConfig    : "org.springframework.security:spring-security-config:${springSecurityVersion}",
			securityTaglibs   : "org.springframework.security:spring-security-taglibs:${springSecurityVersion}",
			rabbit            : "org.springframework.amqp:spring-rabbit:${springAmqpVersion}",
			springSecurityTest: "org.springframework.security:spring-security-test:${springSecurityVersion}",
			webSocket         : "org.springframework:spring-websocket:${springVersion}",
			messaging         : "org.springframework:spring-messaging:${springVersion}",
			batchCore         : "org.springframework.batch:spring-batch-core:${springBatchVersion}",
			batchIntegration  : "org.springframework.batch:spring-batch-integration:${springBatchVersion}",
			integrationFile   : "org.springframework.integration:spring-integration-file:${springIntegrationVersion}",
			webflux           : "org.springframework:spring-webflux:${springVersion}",
			annotationApi	  : "javax.annotation:javax.annotation-api:${annotationApiVersion}"

	]

	hibernate = [
			validator  : "org.hibernate:hibernate-validator:${hibernateValidatorVersion}",
			jpaModelGen: "org.hibernate:hibernate-jpamodelgen:${hibernateVersion}",
			ehcache    : "org.hibernate:hibernate-ehcache:${hibernateVersion}",
			em         : "org.hibernate:hibernate-entitymanager:${hibernateVersion}",
			core       : "org.hibernate:hibernate-core:${hibernateVersion}",
			envers     : "org.hibernate:hibernate-envers:${hibernateVersion}",
			jpaApi     : "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${hibernateJpaVersion}",
			tx         : "com.atomikos:transactions-hibernate4:${atomikosVersion}"
	]


	boot = [
			springBootPlugin: "org.springframework.boot:spring-boot-gradle-plugin:${bootVersion}",
			starterWeb      : "org.springframework.boot:spring-boot-starter-web:${bootVersion}",
			actuator        : "org.springframework.boot:spring-boot-starter-actuator:${bootVersion}",
			starterTest     : "org.springframework.boot:spring-boot-starter-test:${bootVersion}",
			starterAop      : "org.springframework.boot:spring-boot-starter-aop:${bootVersion}",
			starterJdbc     : "org.springframework.boot:spring-boot-starter-jdbc:${bootVersion}",
			starterJpa      : "org.springframework.boot:spring-boot-starter-data-jpa:${bootVersion}",
			starterJta      : "org.springframework.boot:spring-boot-starter-jta-atomikos:${bootVersion}",
			starterArtemis  : "org.springframework.boot:spring-boot-starter-artemis:${bootVersion}",
			starterRabbitmq : "org.springframework.boot:spring-boot-starter-amqp:${bootVersion}",
			starterThyme    : "org.springframework.boot:spring-boot-starter-thymeleaf:${bootVersion}",
			starterSecurity : "org.springframework.boot:spring-boot-starter-security:${bootVersion}",
			starterBatch    : "org.springframework.boot:spring-boot-starter-batch:${bootVersion}",
			starterWebflux  : "org.springframework.boot:spring-boot-starter-webflux:${bootVersion}",
			autoconfigure   : "org.springframework.boot:spring-boot-autoconfigure:${bootVersion}"

	]

	testing = [
			jupiterApi  : "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}",
			jupiterEngine: "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}",
			mockito     : "org.mockito:mockito-all:${mockitoVersion}",
			hamcrestCore: "org.hamcrest:hamcrest-core:${hamcrestVersion}",
			hamcrestLib : "org.hamcrest:hamcrest-library:${hamcrestVersion}",
			dbunit      : "org.dbunit:dbunit:${dbunitVersion}"
	]


	misc = [
			slf4jSimple    : "org.slf4j:slf4j-simple:${slf4jVersion}",
			slf4jApi       : "org.slf4j:slf4j-api:${slf4jVersion}",
			slf4jJcl       : "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
			logback        : "ch.qos.logback:logback-classic:${logbackVersion}",
			groovy         : "org.codehaus.groovy:groovy-all:${groovyVersion}",
			validation     : "javax.validation:validation-api:${javaxValidationVersion}",
			aspectjtools   : "org.aspectj:aspectjtools:${aspectjVersion}",
			aspectjweaver  : "org.aspectj:aspectjweaver:${aspectjVersion}",
			aspectjrt      : "org.aspectj:aspectjrt:${aspectjVersion}",
			guava          : "com.google.guava:guava:${guavaVersion}",
			joda           : "joda-time:joda-time:${jodaVersion}",
			usertype       : "org.jadira.usertype:usertype.core:${utVersion}",
			artemis        : "org.apache.activemq:artemis-jms-server:${artemisVersion}",
			javaEl         : "javax.el:javax.el-api:${javaElVersion}",
			glassfishEl    : "org.glassfish.web:el-impl:${glasshfishELVersion}",
			jms            : "javax.jms:javax.jms-api:${jmsVersion}",
			artemisClient  : "org.apache.activemq:artemis-jms-client:${artemisVersion}",
			artemisServer  : "org.apache.activemq:artemis-jms-server:${artemisVersion}",
			hornetq        : "org.hornetq:hornetq-jms-client:${hornetqVersion}",
			castor         : "org.codehaus.castor:castor-xml:${castorVersion}",
			jacksonDatabind: "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
			poi            : "org.apache.poi:poi:${poiVersion}",
			lang3          : "org.apache.commons:commons-lang3:${lang3Version}"
	]

	web = [
			tiles        : "org.apache.tiles:tiles-jsp:${tilesVersion}",
			bootstrap    : "org.webjars:bootstrap:${bootstrapVersion}",
			jQuery       : "org.webjars:jquery:${jQueryVersion}",
			thymeSecurity: "org.thymeleaf.extras:thymeleaf-extras-springsecurity4:${thymeSecurityVersion}",
			tomcatWsApi  : "org.apache.tomcat:tomcat-websocket-api:${twsVersion}",
			tomcatWsEmbed: "org.apache.tomcat.embed:tomcat-embed-websocket:${twsVersion}",
			httpclient   : "org.apache.httpcomponents:httpclient:${httpclientVersion}"
	]

	react = [
			projReactorIpc: "io.projectreactor.ipc:reactor-netty:0.7.15.RELEASE",
			tomcatEmbedded: "org.apache.tomcat.embed:tomcat-embed-core:9.0.0.M25",
	]

	db = [
			mysql   : "mysql:mysql-connector-java:${mysqlVersion}",
			postgres: "org.postgresql:postgresql:${postgresVersion}",
			dbcp2   : "org.apache.commons:commons-dbcp2:${dbcp2Version}",
	]

}

dependencies {

}

tasks.named('test') {
	useJUnitPlatform()
}
