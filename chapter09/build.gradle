plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management'
}

group 'com.honchar'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    testImplementation testing.jupiterApi

    testRuntimeOnly testing.jupiterEngine

    implementation  misc.slf4jApi, misc.lang3, misc.guava, misc.artemis

//spring.contextSupportorg(spring-beans, spring-context	,spring-core)
//spring.jms(spring-beans, spring-core, spring-messaging, spring-tx)
//spring.dataJpa(eclipse.persistence.jpa, hibernate-core, spring-orm, spring-context, spring-aop, spring-tx,
//      spring-beans, spring-core, spring-aspects, spring-data-commons)
    implementation spring.contextSupport, spring.jms, spring.dataJpa

//boot.springBootPlugin(io.spring.gradle»dependency-management-plugin, org.apache.commons»commons-compress
//      spring-core,  spring-boot-buildpack-platform, spring-boot-loader-tools)
//boot.starterArtemis - Starter for Java Message Service messaging using Apache ActiveMQ Artemis(Message broker +
//      Message Service client)(org.apache.activemq»artemis-jms-client, spring-jms, spring-boot-starter)
//boot.starterJta - Starter for JTA transactions using Atomikos(lightweight transaction manager)(
//      com.atomikos»transactions-jms,transactions-jta,transactions-jdbc; javax.transaction-api, spring-boot-starter)
    implementation boot.springBootPlugin, boot.starterArtemis, boot.starterJta, boot.starterJpa

    implementation hibernate.em, hibernate.tx, db.mysql, db.postgres, db.dbcp2
}

test {
    useJUnitPlatform()
}